{
    "version": "https://jsonfeed.org/version/1",
    "title": "亚纳奇的Blog • All posts by \"论文阅读\" tag",
    "description": "一个不知名的小菜鸡",
    "home_page_url": "http://Yanagi-Kon.github.io",
    "items": [
        {
            "id": "http://yanagi-kon.github.io/2023/10/30/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%2010.30/",
            "url": "http://yanagi-kon.github.io/2023/10/30/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%2010.30/",
            "title": "The NL2KR system",
            "date_published": "2023-10-30T00:28:00.000Z",
            "content_html": "<h1 id=\"论文阅读-1030\"><a class=\"markdownIt-Anchor\" href=\"#论文阅读-1030\">#</a> 论文阅读 10.30</h1>\n<h2 id=\"using-inverse-λ-and-generalization-to-translate-english-to-formal-languages\"><a class=\"markdownIt-Anchor\" href=\"#using-inverse-λ-and-generalization-to-translate-english-to-formal-languages\">#</a> Using Inverse λ and Generalization to Translate English to Formal Languages</h2>\n<h2 id=\"the-nl2kr-system\"><a class=\"markdownIt-Anchor\" href=\"#the-nl2kr-system\">#</a> The NL2KR system</h2>\n<p><strong>Chitta Baral、Juraj Dzifcak、Kanchan Kumbhare and Nguyen H. Vo。</strong></p>\n<h3 id=\"abstract\"><a class=\"markdownIt-Anchor\" href=\"#abstract\">#</a> Abstract</h3>\n<p>In this paper they describe the NL2KR system that translates natural language sentences to a targeted knowledge representation formalism.</p>\n<p>该论文提出了一种系统，能讲自然语言句子翻译为有针对性的知识表示形式。</p>\n<p>The system starts with an initial lexicon and learns meaning of new words from a given set of examples of sentences and their translations.</p>\n<p>这个系统从初始词典开始，从一组给定的句子示例及其翻译中学习新单词的含义。</p>\n<p><strong>Keywords: Natural Language Understanding, Lambda Calculus, Knowledge Representation</strong></p>\n<h3 id=\"introduction-and-motivation\"><a class=\"markdownIt-Anchor\" href=\"#introduction-and-motivation\">#</a> Introduction and Motivation</h3>\n<p>自然语言的理解涉及到将自然语言文本翻译成适当的知识表示语言，以便于推理引擎可以使用知识翻译进行推理并给出相应。为了将自然语言翻译成正式的知识陈述，作者建议使用 Montague 的组合方法 [<a href=\"188-222\">1</a>](<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuanN0b3Iub3JnL3N0YWJsZS8yNDQzNTQyNA==\">https://www.jstor.org/stable/24435424</span>)，其中单词的翻译通过 lambda 演算公式给出，句子和短语的含义是由组成词的意义组合而成。</p>\n<p>该方法的主要挑战是为每个单词提出适当的 lambda 演算表达式：</p>\n<ol>\n<li>单词数量可能很大</li>\n<li>单词的 lambda 表达式对人来说过于复杂</li>\n<li>lambda 对单词的表达是特定于目标语言的</li>\n</ol>\n<p>为了解决上述挑战，可以使用逆 lambda 算法<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcnhpdi5vcmcvYWJzLzExMDguMzg0Mw==\"> [2]</span>，该算法计算单词 / 短语 G 的含义，当单词 / 短语 H 和短语 GH（HG）的含义已知时。</p>\n<p>NL2KR 系统使用包含一些单词及其含义的初始词典 和 一组包含自然语言句子及其翻译的训练语料库 来 学习单词的新含义。然后系统使用新学习的词典来翻译新句子。</p>\n<p>本文中，作者将概述 NL2KR 系统及其使用示例。</p>\n<p><strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC53aWtpcGVkaWEub3JnL3poLWhhbnMvJUNFJTlCJUU2JUJDJTk0JUU3JUFFJTk3Iw==\">λ 演算</span></strong></p>\n<h5 id=\"2using-inverse-λ-and-generalization-to-translate-english-to-formal-languages\"><a class=\"markdownIt-Anchor\" href=\"#2using-inverse-λ-and-generalization-to-translate-english-to-formal-languages\">#</a> [2]Using Inverse λ and Generalization to Translate English to Formal Languages</h5>\n<p>我们提出了一个将自然语言句子翻译为形式或知识表示语言的公式的系统。我们的系统使用两个逆 λ 演算运算符，使用它们可以将某些单词、短语和句子的语义表示作为输入，并从中导出其他单词和短语的语义表示。我们的逆 λ 运算符适用于许多形式语言，包括一阶逻辑、数据库查询语言和回答集编程（ASP）。我们的系统使用句法组合分类解析器来解析自然语言句子，并按照解析的指导构建句子的语义。两者使用相同的解析器。除了逆 λ 演算运算符之外，我们的系统还使用泛化概念从同一类别的其他单词的语义表示中学习单词的语义表示。与此同时，我们使用现有的统计学习方法来分配权重来处理单词的多重含义。我们的系统在机器人命令和控制以及数据库查询的自然语言界面的标准语料库上产生了改进的结果。</p>\n<p>G = λx.H(in(river, Texas) : x@Texas@river)     \t\t\tF = λv1, <span class=\"exturl\" data-url=\"aHR0cDovL3YyLmlu\">v2.in</span>(v2, v1)</p>\n<p>G@F = H(in(river, Texas) : F@Texas@river)= H(in(river, Texas) : λv1, <span class=\"exturl\" data-url=\"aHR0cDovL3YyLmlu\">v2.in</span>(v2, v1) @Texas@river)</p>\n<p>​\t\t =H(in(river, Texas) : λv1, <span class=\"exturl\" data-url=\"aHR0cDovL3YyLmlu\">v2.in</span>(v2, v1) @Texas@river)= H(in(river, Texas) : in(river, Texas)) = H(in(river, Texas))</p>\n<h3 id=\"overview\"><a class=\"markdownIt-Anchor\" href=\"#overview\">#</a> Overview</h3>\n<p>![image-20231030145418978](论文阅读 10.30/image-20231030145418978.png)</p>\n<p>上图为 NL2KR 系统的架构，左边是用于翻译的 NL2KR-T，右边是用于学习的 NL2KR-L。</p>\n<p>用于学习的部分，采用初始字典（lambda 演算表达式）、一组训练句子及其目标形式表示作为输入。然后使用组合分类语法（CCG）解析器来构建解析树。随后，系统使用 逆 lambda 和 泛化算法（Generalization）来学习新遇到的，不在初始字典中的新单词的含义，并将它们添加到词典中。然后使用参数学习方法来估计每个词典条目（单词、其句法类别和含义）的权重，使得训练集中的句子被翻译成给定的形式的联合概率最大。NL2KR-L 的结果是最终的词典，其中包含更大的单词集、它们的含义和权重。</p>\n<p>训练组件完成其工作后，翻译子部分 (NL2KR-T) 使用此更新的词典并使用 CCG 解析器翻译句子。由于单词可以具有多种含义及其相关的 λ 演算表达式，因此分配给词典中每个词汇条目的权重有助于确定单词在句子上下文中更可能的含义。</p>\n<h3 id=\"conclusion-and-future-work\"><a class=\"markdownIt-Anchor\" href=\"#conclusion-and-future-work\">#</a> Conclusion and Future Work</h3>\n<p>在这项工作中，我们提出了 NL2KR 系统，该系统用于将自然语言翻译为形式表示。 NL2KR 系统的输入是训练句子及其形式化表示；以及一些已知单词含义的初始词典。 NL2KR 系统将尝试从训练数据中学习其他单词的含义。我们提供了六个脚本来执行 NL2KR 的多个模块，并通过示例展示了如何使用它们。</p>\n<p>未来，我们计划使 NL2KR 更具可扩展性，并向 NL2KR 系统添加更多功能，例如（1）自动构建初始词典和（2）使用更多知识（例如词义）来选择单词的正确含义。</p>\n<h3 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h3>\n<p>NL2KR 是一个半自动语义解析平台，它有两个相互依赖的子部分：（1）用于学习的 NL2KR-L；（2）用于翻译的 NL2KR-T。</p>\n<p>NL2KR-L 输入的初始词典包括一些单词及其在 lambda-calculus 表达式中的含义、一组训练句子及其目标形式表示。然后，它使用组合分类语法（CCG）解析器构建解析树。接下来，系统的学习子部分使用逆 -λ 算法和泛化算法来学习新遇到的词的含义，并将其添加到词库中。然后使用参数学习法来估计每个词库条目（词、其句法类别和含义）的权重，从而使训练集中的句子被翻译成其给定形式表示的联合概率最大化。</p>\n<p>NL2KR-L 的结果就是最终词库，其中包含所有词、词义和权重。训练组件完成工作后，翻译组件（NL2KR-T）将使用更新后的词典，并使用 CCG 分析器翻译句子。由于单词可以有多种含义及其相关的 λ 微积分表达式，分配给词典中每个词条的权重有助于确定单词在句子上下文中更可能的含义。</p>\n<h3 id=\"why\"><a class=\"markdownIt-Anchor\" href=\"#why\">#</a> Why</h3>\n<p>将自然语言表示成知识表示语言的方法有许多，作者是在 Montague 的基础上开展研究，自然语言中的单词处理是通过 lambda 演算公式给出的，短语和句子的含义是通过组合单词语义获得。然而这样操作的挑战在于需要对每一个单词提出适当的 lambda 演算表达式：首先，单词的数量繁多；其次，某些单词的 lambda 表达式过于复杂，不容易直接想出；最后，lambda 表达式是特定于目标语言的。</p>\n<h3 id=\"what\"><a class=\"markdownIt-Anchor\" href=\"#what\">#</a> What</h3>\n<p>为了解决上述问题，作者采用 逆 lambda 算法，已知 单词 / 短语 H 和短语 GH，就可以求出，单词 / 短语的含义 G。</p>\n<p>NL2KR 系统有两个子系统，使用包含一些单词及其含义的初始词典和一组包含自然语言句子及其翻译的训练语料库来学习单词的新含义。</p>\n<h3 id=\"how-nl2kr系统\"><a class=\"markdownIt-Anchor\" href=\"#how-nl2kr系统\">#</a> How NL2KR 系统</h3>\n<p>![image-20231030145418978](论文阅读 10.30/image-20231030145418978.png)</p>\n<p>NL2KR-L 是学习部分，输入是初始词典、训练语料库、语法。首先将 训练语料库按照语法通过 CCG 组合分类语法解析器构造解析树；随后，通过 逆 lambda 算法和 泛化方法 来学习不存在于初始词典中的新单词的含义，并将其添加到词典中；然后，使用参数学习（parameter learning）的方法估计词典中条目的权重，使得训练集中的句子被翻译成给定形式的联合概率最大。最终输出更大的词典。</p>\n<p>NL2KR-T 是翻译部分，其使用训练产生的词典作为输入，通过使用 CCG 解析器解析句子。</p>\n<h3 id=\"实验过程\"><a class=\"markdownIt-Anchor\" href=\"#实验过程\">#</a> 实验过程</h3>\n<h4 id=\"lambda-算法\"><a class=\"markdownIt-Anchor\" href=\"#lambda-算法\">#</a> lambda 算法</h4>\n<p>例子：</p>\n<pre><code>function =# y .# x. loves (x , y)\nargument =# x. x@mia\nResult = #x . loves (x ,# x0 . x0 @ mia )\n</code></pre>\n<h4 id=\"逆-lambda-算法\"><a class=\"markdownIt-Anchor\" href=\"#逆-lambda-算法\">#</a> 逆 lambda 算法</h4>\n<p>f = g @ h 或者 f = h@g，但有时我们只有 f 和 g，怎么得到 h</p>\n<p>f = l @ r</p>\n<pre><code>parent =# x. loves (x , mia )\nleft_child = mia\n\nRight child = null\n\n因为 找不到一个 r 使得 l@r = f\n</code></pre>\n<p>但如果：</p>\n<pre><code>parent =# x. loves (x , mia )\nright_child = mia\n\nLeft child = # x1 .# x. loves (x , x1 )\n\n因为 # x1 .# x. loves (x , x1 ) @ mia = # x. loves (x , mia )\n</code></pre>\n<p>对第一个例子，把 mia 换一种形式表示</p>\n<pre><code>parent =# x. loves (x , mia )\nleft_child =# x. x @ mia\n\nRight child = # x1 .# x. loves (x , x1 )\n\n因为 # x. x @ mia @ # x1 .# x. loves (x , x1 ) = # x1 .# x. loves (x , x1 ) @ mia = # x. loves (x , mia )\n</code></pre>\n<h5 id=\"逆-lambda-算法的细节\"><a class=\"markdownIt-Anchor\" href=\"#逆-lambda-算法的细节\">#</a> 逆 lambda 算法的细节</h5>\n<p>逆 lambda 算法包括两个逆 lambda 操作，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mi>n</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi>s</mi><msub><mi>e</mi><mi>L</mi></msub></mrow><annotation encoding=\"application/x-tex\">Inverse_L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">s</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">L</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mi>n</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi>s</mi><msub><mi>e</mi><mi>R</mi></msub></mrow><annotation encoding=\"application/x-tex\">Inverse_R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">s</span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p>假设有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mi mathvariant=\"normal\">@</mi><mi>F</mi><mo>=</mo><mi>H</mi></mrow><annotation encoding=\"application/x-tex\">G@F=H</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord\">@</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span></span></span></span></p>\n\\begin{align*}\\label{2}\n&1.IF \\; G \\;is\\;\\lambda v.v@J,set\\;F=Inverse_L(H,J)\\\\\n&2.IF\\;J\\;is\\;a\\;sub\\;term\\;of\\;H\\;and\\;G\\;is\\;\\lambda v.H(J:v)\\;then\\;F=J\\\\\n&3.IF\\;G\\;is\\;not\\;\\lambda v.v@J,J\\;is\\;a\\;sub\\;term\\;of\\;H\\;and\\;G\\;is\\;\\lambda w.H(J(J_1,...J_m):w@J_p,...,J_q)with\\\\\n&\\;1≤p,q,s ≤ m. then\\;F = λv1, ..., vs.J(J1, ..., Jm : vp, ..., vq).\n\\end{align*}\n\n<p>例子：</p>\n<p>假设有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi><mo>=</mo><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>r</mi><mi>i</mi><mi>v</mi><mi>e</mi><mi>r</mi><mo separator=\"true\">,</mo><mi>T</mi><mi>e</mi><mi>x</mi><mi>a</mi><mi>s</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H=in(river,Texas)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mo>=</mo><mi>λ</mi><mi>v</mi><mi mathvariant=\"normal\">.</mi><mi>v</mi><mi mathvariant=\"normal\">@</mi><mi>T</mi><mi>e</mi><mi>x</mi><mi>a</mi><mi>s</mi><mi mathvariant=\"normal\">@</mi><mi>r</mi><mi>i</mi><mi>v</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">G=\\lambda v.v@Texas@river</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">@</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">@</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span></p>\n<p>由于 J 不是条件一中的类型，因为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo>=</mo><mi>T</mi><mi>e</mi><mi>x</mi><mi>a</mi><mi>s</mi><mi mathvariant=\"normal\">@</mi><mi>r</mi><mi>i</mi><mi>v</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">J=T exas@river</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">@</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span> 不是一个公式，所以条件一不符合</p>\n<p>并且也不符合条件二。</p>\n<p>因此，我们尝试寻找一个合适的 J 满足条件三。假设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>J</mi><mn>1</mn></msub><mo>=</mo><mi>r</mi><mi>i</mi><mi>v</mi><mi>e</mi><mi>r</mi><mo separator=\"true\">,</mo><msub><mi>J</mi><mn>2</mn></msub><mo>=</mo><mi>T</mi><mi>e</mi><mi>x</mi><mi>a</mi><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">J_1=river,J_2=Texas</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.09618em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.09618em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span></span></span></span> 那么第三个条件应该满足</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>G</mi><mo>=</mo><mi>λ</mi><mi>x</mi><mi mathvariant=\"normal\">.</mi><mi>H</mi><mo stretchy=\"false\">(</mo><mi>J</mi><mo stretchy=\"false\">(</mo><msub><mi>J</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>J</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo>:</mo><mi>x</mi><mi mathvariant=\"normal\">@</mi><msub><mi>J</mi><mn>2</mn></msub><mi mathvariant=\"normal\">@</mi><msub><mi>J</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">G=\\lambda x.H(J(J_1,J_2):x@J_2@J_1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.09618em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.09618em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mord\">@</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.09618em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">@</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.09618em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>  即 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo>=</mo><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mtext>  </mtext><mi>G</mi><mo>=</mo><mi>λ</mi><mi>x</mi><mi mathvariant=\"normal\">.</mi><mi>H</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>r</mi><mi>i</mi><mi>v</mi><mi>e</mi><mi>r</mi><mo separator=\"true\">,</mo><mi>T</mi><mi>e</mi><mi>x</mi><mi>a</mi><mi>s</mi><mo stretchy=\"false\">)</mo><mo>:</mo><mi>x</mi><mi mathvariant=\"normal\">@</mi><mi>T</mi><mi>e</mi><mi>x</mi><mi>a</mi><mi>s</mi><mi mathvariant=\"normal\">@</mi><mi>r</mi><mi>i</mi><mi>v</mi><mi>e</mi><mi>r</mi><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mtext>  </mtext><mi>F</mi><mo>=</mo><mi>λ</mi><mi>v</mi><mn>1</mn><mo separator=\"true\">,</mo><mi>v</mi><mn>2.</mn><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>v</mi><mn>1</mn><mo separator=\"true\">,</mo><mi>v</mi><mn>2</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J=in(),\\;G=\\lambda x.H(in(river,Texas):x@Texas@river),\\;F=\\lambda v1,v2.in(v1,v2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mord\">@</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">@</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">2</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">2</span><span class=\"mclose\">)</span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>G</mi><mi mathvariant=\"normal\">@</mi><mi>F</mi><mo>=</mo><mi>λ</mi><mi>v</mi><mi mathvariant=\"normal\">.</mi><mi>v</mi><mi mathvariant=\"normal\">@</mi><mi>T</mi><mi>e</mi><mi>x</mi><mi>a</mi><mi>s</mi><mi mathvariant=\"normal\">@</mi><mi>r</mi><mi>i</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi mathvariant=\"normal\">@</mi><mi>λ</mi><mi>v</mi><mn>1</mn><mo separator=\"true\">,</mo><mi>v</mi><mn>2.</mn><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>v</mi><mn>1</mn><mo separator=\"true\">,</mo><mi>v</mi><mn>2</mn><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mo>=</mo><mi>λ</mi><mi>v</mi><mn>1</mn><mo separator=\"true\">,</mo><mi>v</mi><mn>2.</mn><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>v</mi><mn>1</mn><mo separator=\"true\">,</mo><mi>v</mi><mn>2</mn><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">@</mi><mi>T</mi><mi>e</mi><mi>x</mi><mi>a</mi><mi>s</mi><mi mathvariant=\"normal\">@</mi><mi>r</mi><mi>i</mi><mi>v</mi><mi>e</mi><mi>r</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>r</mi><mi>i</mi><mi>v</mi><mi>e</mi><mi>r</mi><mo separator=\"true\">,</mo><mi>T</mi><mi>e</mi><mi>x</mi><mi>a</mi><mi>s</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">G@F =\\lambda v.v@Texas@river@\\lambda v1,v2.in(v1,v2)\\\\\n=\\lambda v1,v2.in(v1,v2)@Texas@river\\\\\n=in(river,Texas)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">G</span><span class=\"mord\">@</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">.</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">@</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">@</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">@</span><span class=\"mord mathnormal\">λ</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">2</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">2</span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">2</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mord\">@</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">@</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<h4 id=\"泛化方法\"><a class=\"markdownIt-Anchor\" href=\"#泛化方法\">#</a> 泛化方法</h4>\n<p>当缺少的词过多时，便不能用 逆 lambda 算法 计算词的含义，因而我们可以使用 泛化算法生成新单词的含义</p>\n<p>例如，已知 eats 的语法类别为 (S\\NP)/NP、lambda 表达式为  <code>λy,λx,eats(x, y)</code> ，而我们想要知道 语法类别为 plays 的 lambda 表达式，我们可以通过泛化得到其表达式应该为  <code>λy,λx,play(x, y)</code></p>\n<p>例如：</p>\n<p>![image-20231104205226114](论文阅读 10.30/image-20231104205226114.png)</p>\n<p>dictionary 中含有：</p>\n<p>![image-20231104205237402](论文阅读 10.30/image-20231104205237402.png)</p>\n<p>mia 被泛化成：</p>\n<p>![image-20231104205259864](论文阅读 10.30/image-20231104205259864.png)</p>\n<h4 id=\"ccg-解析\"><a class=\"markdownIt-Anchor\" href=\"#ccg-解析\">#</a> CCG <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0plYWtzdW4vYXJ0aWNsZS9kZXRhaWxzLzEzMzA2OTQxNT9zcG09MTAwMS4yMTAxLjMwMDEuNjY1MC4zJmFtcDt1dG1fbWVkaXVtPWRpc3RyaWJ1dGUucGNfcmVsZXZhbnQubm9uZS10YXNrLWJsb2ctMiU3RWRlZmF1bHQlN0VDVFJMSVNUJTdFUmF0ZS0zLTEzMzA2OTQxNS1ibG9nLTExNTQwNTI0OS4yMzUlNUV2MzglNUVwY19yZWxldmFudF9hbnRpX3ZpcF9iYXNlJmFtcDtkZXB0aF8xLXV0bV9zb3VyY2U9ZGlzdHJpYnV0ZS5wY19yZWxldmFudC5ub25lLXRhc2stYmxvZy0yJTdFZGVmYXVsdCU3RUNUUkxJU1QlN0VSYXRlLTMtMTMzMDY5NDE1LWJsb2ctMTE1NDA1MjQ5LjIzNSU1RXYzOCU1RXBjX3JlbGV2YW50X2FudGlfdmlwX2Jhc2UmYW1wO3V0bV9yZWxldmFudF9pbmRleD02\">解析</span></h4>\n<p>组合规则的方向： CCG 使用斜线（/）和反斜线（\\）来表示组合规则的方向。斜线表示右向组合，反斜线表示左向组合。例如，X/Y 表示 X 组合到 Y 的右侧，X\\Y 表示 X 组合到 Y 的左侧。 <code>本论文的CCG基于 ASPccgTK</code></p>\n<p>函数应用规则： CCG 使用函数应用规则来表示动词与宾语的组合。例如，如果动词是 X/Y，它需要一个 X 类型的宾语，这样它们可以组合成一个完整的动词短语。</p>\n<p>合并规则： 合并规则用于组合两个相同类型的组合范畴，以构建更大的短语或子句。例如，如果你有 X\\Y 和 Y，它们可以合并成 X，表示它们共同组成一个更大的短语。</p>\n<p>限定词规则： 限定词如冠词（“the”、“a”）通常需要与名词短语组合。这些规则用于确保正确的限定词与名词的组合。</p>\n<p>副词修饰规则： 副词通常修饰动词或形容词。相关的规则确保副词与适当的词汇项组合。</p>\n<p>并列规则： 用于描述两个或多个并列词汇项之间的组合，以构建并列结构。</p>\n<p>其他特殊规则： CCG 还可以包括其他特殊情况下的组合规则，以处理复杂的语法结构。</p>\n<h4 id=\"nl2kr-l\"><a class=\"markdownIt-Anchor\" href=\"#nl2kr-l\">#</a> NL2KR-L</h4>\n<p>运行该模块需要在 RunConfiguration 文件中设置初始词典文件路径、语法类别的覆盖文件（可选）、训练数据文件和输出词典文件路径（可选） 。</p>\n<p>![image-20231105193623335](论文阅读 10.30/image-20231105193623335.png)</p>\n<p>词典中是完整的知识表示内容，syntax 中包含的是 单词 及其 语法类别。训练文件中包含的是训练的句子。</p>\n<p>train：</p>\n<p>![image-20231105194101024](论文阅读 10.30/image-20231105194101024.png)</p>\n<p>初始词典为：</p>\n<pre><code>Vincent\tN\tvincent\nVincent\tN\t#x.vincent(x)\ntakes\t(S\\NP)/NP\t#w. #z. (w@ #x. takes(z,x) )\nplane\tN\t#x. plane(x)\nboxer\tN\t#x. boxer(x)\nfights\tS\\NP\t#x. fight(x)\n</code></pre>\n<p>![image-20231105194114406](论文阅读 10.30/image-20231105194114406.png)</p>\n<p>在学习 Some boxer walks 的时候，根据 syntax 中提供的语法信息，比照着 fights 进行泛化学习：</p>\n<pre><code>takes\t(S\\NP)/NP\nEvery\t(S/(S\\NP))/NP\nSome\t(S/(S\\NP))/NP\nwalks\tS\\NP\nfights\tS\\NP\nloves\t(S\\NP)/NP\n</code></pre>\n<p>得到 walks\tS\\NP\t#x.\twalks (x)</p>\n<pre><code>EX.\t(boxer(X)\t^\twalk(X))\t=\tsome boxer\t@\twalks\nwalks S\\NP\t#x.\twalks(x)\nsome boxer #x1.EX.boxer(X)\t^\tx1@X\n\n#x1.EX.boxer(X)\t^\tx1 @X @ #x.\twalks(x) = EX.boxer(X) ^ #x.walks(x)@X = EX.boxer(X) ^ walks(X)\n</code></pre>\n<p>利用 boxer 的含义 #x.boxer (x)，我们可以得到 some 的含义</p>\n<pre><code>some\t#x2.#x1.EX.x2@X^x1@X\n\nsome@boxer = #x2.#x1.EX.x2@X^x1@X@#x.boxer(x)\n\t\t   = #x1.EX.#x.boxer(x)@X ^ x1@X\n\t\t   = EX.#x.boxer(x)@X^X\n\t\t   = EX.boxer(X)^X\n</code></pre>\n<p>在学习阶段结束时，运行参数估计来为每个单词的含义分配权重。因为同一个词可以有多个知识表示形式，例如 boxer 在通过泛化学习后，拥有 boxer 和 #x.boxer (x) 两个含义，但是含义 boxer 对于整个句子的翻译没有任何贡献，所以其权重很小，为负数。</p>\n<p>![image-20231105223520775](论文阅读 10.30/image-20231105223520775.png)</p>\n<p>概率学习的方法：</p>\n<h4 id=\"nl2kr-t\"><a class=\"markdownIt-Anchor\" href=\"#nl2kr-t\">#</a> NL2KR-T</h4>\n<pre><code>John catches a bus\n N\t (S\\NP)/NP  NP/N   N\n \nJohn:\t\t\tjohn\ncatches:\t\t#w.#z.w@#x.catches(z,x)\na:\t\t\t\t#x7.#x5.EX.x7@X ^ x5@X \nbus:\t\t\t#x.bus(x)\n\na bus\n#x7.#x5.EX.x7@X^x5@X @ #x.bus(x)\n#x5.EX.#x.bus(x)@X^x5@X\n\ncatches a bus:\n#w.#z.w@#x.catches(z,x) @ #x5.EX.#x.bus(x)@X^x5@X\n#z.#x5.EX.#x.bus(x)@X^x5@X@#x.catches(z,x)\n\njohn catches a bus:\n(#z.#x5.EX.#x.bus(x)@X^x5@X@#x.catches(z,x))@john\n#x5.EX.#x.bus(x)@X^x5@X@#x.catches(john,x)\nEX.#x.bus(x)@X^#x.catches(john,x)@X\nEX.bus(X)^catches(john,X)\n</code></pre>\n<h4 id=\"总结和展望\"><a class=\"markdownIt-Anchor\" href=\"#总结和展望\">#</a> 总结和展望</h4>\n<p>在这篇论文中，作者实现了一个 NL2KR 系统用于将自然语言翻译为知识表示，并成功实现了相关功能。</p>\n<p>未来作者打算向 NL2KR 系统添加更多功能，如，自动构建初始词典，使用更多的知识来选择单词的正确含义。</p>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC84MDY5MjkyNw==\">关于 Log-linear models and conditional random fields</span></p>\n</blockquote>\n",
            "tags": [
                "论文阅读"
            ]
        }
    ]
}